Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o (exit)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000003 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800200
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
LOAD main.o
LOAD uart.o
LOAD spi.o
LOAD sdcard.o
LOAD sdprint.o
START GROUP
LOAD /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/libatmega128rfa1.a
END GROUP
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ff00                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xff00
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000003]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xeb6
 *(.vectors)
 .vectors       0x0000000000000000      0x120 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000120                . = ALIGN (0x2)
                0x0000000000000120                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000120        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000120                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
 .progmem.data  0x0000000000000120       0xa2 main.o
 .progmem.data  0x00000000000001c2      0x2f8 sdprint.o
                0x00000000000004ba                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000004ba                __ctors_start = .
 *(.ctors)
                0x00000000000004ba                __ctors_end = .
                0x00000000000004ba                __dtors_start = .
 *(.dtors)
                0x00000000000004ba                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000004ba        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
                0x00000000000004ba                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000004ba        0xc /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000004c6        0x8 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
 *(.init9)
 *(.text)
 .text          0x00000000000004ce        0x4 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
                0x00000000000004ce                __vector_38
                0x00000000000004ce                __vector_22
                0x00000000000004ce                __vector_63
                0x00000000000004ce                __vector_28
                0x00000000000004ce                __vector_67
                0x00000000000004ce                __vector_1
                0x00000000000004ce                __vector_32
                0x00000000000004ce                __vector_71
                0x00000000000004ce                __vector_34
                0x00000000000004ce                __vector_62
                0x00000000000004ce                __vector_24
                0x00000000000004ce                __vector_12
                0x00000000000004ce                __vector_55
                0x00000000000004ce                __vector_69
                0x00000000000004ce                __vector_46
                0x00000000000004ce                __bad_interrupt
                0x00000000000004ce                __vector_6
                0x00000000000004ce                __vector_31
                0x00000000000004ce                __vector_35
                0x00000000000004ce                __vector_39
                0x00000000000004ce                __vector_3
                0x00000000000004ce                __vector_23
                0x00000000000004ce                __vector_68
                0x00000000000004ce                __vector_30
                0x00000000000004ce                __vector_45
                0x00000000000004ce                __vector_25
                0x00000000000004ce                __vector_61
                0x00000000000004ce                __vector_11
                0x00000000000004ce                __vector_54
                0x00000000000004ce                __vector_13
                0x00000000000004ce                __vector_17
                0x00000000000004ce                __vector_19
                0x00000000000004ce                __vector_56
                0x00000000000004ce                __vector_7
                0x00000000000004ce                __vector_49
                0x00000000000004ce                __vector_41
                0x00000000000004ce                __vector_64
                0x00000000000004ce                __vector_43
                0x00000000000004ce                __vector_27
                0x00000000000004ce                __vector_5
                0x00000000000004ce                __vector_33
                0x00000000000004ce                __vector_47
                0x00000000000004ce                __vector_52
                0x00000000000004ce                __vector_37
                0x00000000000004ce                __vector_4
                0x00000000000004ce                __vector_44
                0x00000000000004ce                __vector_51
                0x00000000000004ce                __vector_9
                0x00000000000004ce                __vector_2
                0x00000000000004ce                __vector_21
                0x00000000000004ce                __vector_15
                0x00000000000004ce                __vector_66
                0x00000000000004ce                __vector_36
                0x00000000000004ce                __vector_58
                0x00000000000004ce                __vector_70
                0x00000000000004ce                __vector_29
                0x00000000000004ce                __vector_60
                0x00000000000004ce                __vector_40
                0x00000000000004ce                __vector_8
                0x00000000000004ce                __vector_26
                0x00000000000004ce                __vector_48
                0x00000000000004ce                __vector_14
                0x00000000000004ce                __vector_57
                0x00000000000004ce                __vector_53
                0x00000000000004ce                __vector_10
                0x00000000000004ce                __vector_50
                0x00000000000004ce                __vector_16
                0x00000000000004ce                __vector_59
                0x00000000000004ce                __vector_18
                0x00000000000004ce                __vector_20
                0x00000000000004ce                __vector_42
                0x00000000000004ce                __vector_65
 .text          0x00000000000004d2        0x0 main.o
 .text          0x00000000000004d2       0x98 uart.o
                0x00000000000004d2                UART_init
                0x00000000000004e8                UART_putc
                0x00000000000004f6                UART_puts
                0x000000000000050e                UART_puthex8
                0x000000000000053e                UART_getc
                0x000000000000054c                UART_puts_p
 .text          0x000000000000056a       0x24 spi.o
                0x000000000000056a                SPI_init
                0x0000000000000582                SPI_transfer
 .text          0x000000000000058e      0x458 sdcard.o
                0x000000000000058e                SD_powerUpSeq
                0x00000000000005b6                SD_command
                0x00000000000005fa                SD_readRes1
                0x0000000000000610                SD_readRes2
                0x000000000000062a                SD_readBytes
                0x0000000000000650                SD_readRes7
                0x0000000000000674                SD_readRes3
                0x0000000000000678                SD_goIdleState
                0x00000000000006b0                SD_sendIfCond
                0x00000000000006ec                SD_sendStatus
                0x0000000000000726                SD_readSingleBlock
                0x00000000000007da                SD_writeSingleBlock
                0x0000000000000898                SD_readOCR
                0x00000000000008d6                SD_sendApp
                0x000000000000090e                SD_sendOpCond
                0x0000000000000948                SD_init
 .text          0x00000000000009e6      0x3a6 sdprint.o
                0x00000000000009e6                SD_printR1
                0x0000000000000a62                SD_printR2
                0x0000000000000afe                SD_printR3
                0x0000000000000be2                SD_printR7
                0x0000000000000c66                SD_printCSD
                0x0000000000000cfc                SD_printBuf
                0x0000000000000d46                SD_printDataErrToken
 .text          0x0000000000000d8c        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
                0x0000000000000d8c                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000d8c      0x126 main.o
                0x0000000000000d8c                main
 .text.libgcc.mul
                0x0000000000000eb2        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000eb2        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000eb2        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000eb2        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000eb2        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000eb2        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000eb2        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
                0x0000000000000eb2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000eb2        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
                0x0000000000000eb2                exit
                0x0000000000000eb2                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000eb2        0x4 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000eb6                _etext = .

.data           0x0000000000800200        0x0 load address 0x0000000000000eb6
                [!provide]                        PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
 .data          0x0000000000800200        0x0 main.o
 .data          0x0000000000800200        0x0 uart.o
 .data          0x0000000000800200        0x0 spi.o
 .data          0x0000000000800200        0x0 sdcard.o
 .data          0x0000000000800200        0x0 sdprint.o
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800200                . = ALIGN (0x2)
                0x0000000000800200                _edata = .
                [!provide]                        PROVIDE (__data_end, .)

.bss            0x0000000000800200        0x0
                [!provide]                        PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800200        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
 .bss           0x0000000000800200        0x0 main.o
 .bss           0x0000000000800200        0x0 uart.o
 .bss           0x0000000000800200        0x0 spi.o
 .bss           0x0000000000800200        0x0 sdcard.o
 .bss           0x0000000000800200        0x0 sdprint.o
 .bss           0x0000000000800200        0x0 /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
 *(.bss*)
 *(COMMON)
                [!provide]                        PROVIDE (__bss_end, .)
                0x0000000000000eb6                __data_load_start = LOADADDR (.data)
                0x0000000000000eb6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800200        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x0000000000800200                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 uart.o
 .comment       0x0000000000000011       0x12 spi.o
 .comment       0x0000000000000011       0x12 sdcard.o
 .comment       0x0000000000000011       0x12 sdprint.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000     0x1160
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000     0x1160 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o

.debug_abbrev   0x0000000000000000     0x1072
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000     0x1072 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o

.debug_line     0x0000000000000000       0x1a
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1a /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x6de
 *(.debug_str)
 .debug_str     0x0000000000000000      0x6de /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Символ                                      Файл
SD_command                                        sdcard.o
SD_goIdleState                                    sdcard.o
SD_init                                           sdcard.o
                                                  main.o
SD_powerUpSeq                                     sdcard.o
SD_printBuf                                       sdprint.o
                                                  main.o
SD_printCSD                                       sdprint.o
SD_printDataErrToken                              sdprint.o
                                                  main.o
SD_printR1                                        sdprint.o
                                                  main.o
SD_printR2                                        sdprint.o
SD_printR3                                        sdprint.o
SD_printR7                                        sdprint.o
SD_readBytes                                      sdcard.o
SD_readOCR                                        sdcard.o
SD_readRes1                                       sdcard.o
SD_readRes2                                       sdcard.o
SD_readRes3                                       sdcard.o
SD_readRes7                                       sdcard.o
SD_readSingleBlock                                sdcard.o
                                                  main.o
SD_sendApp                                        sdcard.o
SD_sendIfCond                                     sdcard.o
SD_sendOpCond                                     sdcard.o
SD_sendStatus                                     sdcard.o
SD_writeSingleBlock                               sdcard.o
                                                  main.o
SPI_init                                          spi.o
                                                  main.o
SPI_transfer                                      spi.o
                                                  sdcard.o
UART_getc                                         uart.o
UART_init                                         uart.o
                                                  main.o
UART_putc                                         uart.o
                                                  sdprint.o
UART_puthex8                                      uart.o
                                                  sdprint.o
                                                  main.o
UART_puts                                         uart.o
UART_puts_p                                       uart.o
                                                  sdprint.o
                                                  main.o
__FUSE_REGION_LENGTH__                            /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__bad_interrupt                                   /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__heap_end                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__init                                            /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__stack                                           /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_1                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_10                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_11                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_12                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_13                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_14                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_15                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_16                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_17                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_18                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_19                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_2                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_20                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_21                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_22                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_23                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_24                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_25                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_26                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_27                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_28                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_29                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_3                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_30                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_31                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_32                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_33                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_34                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_35                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_36                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_37                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_38                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_39                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_4                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_40                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_41                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_42                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_43                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_44                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_45                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_46                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_47                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_48                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_49                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_5                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_50                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_51                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_52                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_53                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_54                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_55                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_56                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_57                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_58                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_59                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_6                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_60                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_61                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_62                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_63                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_64                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_65                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_66                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_67                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_68                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_69                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_7                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_70                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_71                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_8                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_9                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vector_default                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
__vectors                                         /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
_exit                                             /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
exit                                              /usr/lib/gcc/avr/5.4.0/avr51/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
main                                              main.o
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr51/crtatmega128rfa1.o
